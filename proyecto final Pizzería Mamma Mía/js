import React, { useEffect, useState } from 'react';
import './PizzaApp.css';
import OrderButton from './OrderButton'; // Import the OrderButton component

const useTotal = () => {
  const [total, setTotal] = useState(0);

  const updateTotal = (price) => {
    setTotal((prevTotal) => prevTotal + Number(price));
  };

  return { total, updateTotal };
};

const PizzaApp = () => {
  const [pizzas, setPizzas] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const { total, updateTotal } = useTotal();

  const fetchPizzas = async () => {
    try {
      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/pizzas`);
      if (!response.ok) {
        throw new Error('Error al obtener las pizzas');
      }
      const data = await response.json();

      if (Array.isArray(data)) {
        setPizzas(data);
      } else {
        throw new Error('Respuesta inesperada del servidor');
      }
    } catch (error) {
      setError('No se pudo cargar la información de las pizzas. Por favor, intente nuevamente más tarde.');
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPizzas();
  }, []);

  if (loading) {
    return <p>Cargando pizzas...</p>;
  }

  if (error) {
    return <p>{error}</p>;
  }

  if (pizzas.length === 0) {
    return <p>No hay pizzas disponibles en este momento.</p>;
  }

  return (
    <div className="pizzas-container">
      <h2>Total: ${total.toFixed(2)}</h2>
      {pizzas.map((pizza) => (
        <div key={pizza.id} className="card-pizza">
          <img
            src={pizza.image}
            alt={`Pizza ${pizza.name}`}
            className="pizza-image"
            loading="lazy"
          />
          <h3>{pizza.name}</h3>
          <p>Precio: ${Number(pizza.price).toFixed(2)}</p>
          <p>Ingredientes: {pizza.ingredients.join(', ')}</p>
          <p>{pizza.description}</p>
          <button onClick={() => updateTotal(pizza.price)}>Añadir al carrito</button>
        </div>
      ))}
      {/* Conditionally render the OrderButton component */}
      {pizzas.length > 0 && total > 0 && (
        <OrderButton disabled={total === 0} onClick={() => /* handle order submission */} />
      )}
    </div>
  );
};

export default PizzaApp;